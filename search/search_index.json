{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83e\udded Willkommen auf Hasan's Route","text":"<p>\u201eJede Route beginnt mit einem ersten Schritt \u2013 hier beginnt deiner.\u201c</p>"},{"location":"#projektuberblick","title":"\ud83d\udea7 Projekt\u00fcberblick","text":"<p>Was erwartet dich auf dieser Route?</p> <p>Diese Dokumentation begleitet dich auf meinem Weg zu einer funktionierenden und sicheren Entwicklungsumgebung. Du lernst Schritt f\u00fcr Schritt, wie du deinen Ubuntu-Server vorbereitest und einen Cloudflare-Tunnel einrichtest.</p> <p>Alle Stationen dieser Route sind modular aufgebaut \u2013 du kannst jederzeit einsteigen oder gezielt bestimmte Etappen ansteuern.</p>"},{"location":"#etappen-der-route","title":"\ud83d\udee4\ufe0f Etappen der Route","text":"<p>Etappe 1 \u2013 SSH-Zugriff einrichten</p> <p>\ud83d\udd10 Zugriff auf deinen Server vorbereiten:</p> <ul> <li>Installation des OpenSSH-Servers</li> <li>Aktivierung des Passwort-Logins</li> <li>Verbindung \u00fcber Linux, Windows CMD, PowerShell oder PuTTY</li> </ul> <p>\ud83d\udc49 Zur Server-Konfiguration \u00bb \ud83d\udc49 Zur SSH-Anleitung \u00bb </p> <p>Etappe 2 \u2013 Cloudflare Tunnel starten</p> <p>\ud83c\udf10 Lokalen Dienst sicher erreichbar machen \u2013 ohne eigene Domain:</p> <ul> <li>Cloudflare Tunnel einrichten</li> <li>HTTPS-Zugang erzeugen</li> <li>Ausgabe in Datei speichern &amp; URL weiterverwenden</li> </ul> <p>\ud83d\udc49 Zur Tunnel-Anleitung \u00bb</p>"},{"location":"#so-navigierst-du-durch-die-route","title":"\ud83d\uddfa\ufe0f So navigierst du durch die Route","text":"<p>Hinweis</p> <ul> <li>Die Etappen sind unabh\u00e4ngig voneinander nutzbar  </li> <li>Die Navigation erfolgt \u00fcber das Men\u00fc oder die Direktlinks  </li> <li>Du kannst jederzeit zu einem sp\u00e4teren Thema springen \u2013 ganz wie bei einer echten Route</li> </ul>"},{"location":"#dein-erster-schritt","title":"\ud83d\ude80 Dein erster Schritt","text":"<p>Bereit? Starte mit der ersten Etappe: \ud83d\udc49 SSH auf dem Server einrichten \u00bb</p> <p>Hasan\u2019s Route</p> <p>\u201eDiese Doku soll nicht nur erkl\u00e4ren \u2013 sie soll dich begleiten.\u201c</p>"},{"location":"HowToCloudflare/","title":"\ud83c\udf10 Etappe 2 \u2013 Cloudflare Tunnel Setup (ohne Account)","text":"<p>Etappenziel</p> <p>Auf dieser Etappe deiner Route lernst du, wie du deinen lokalen Dienst \u00fcber das Internet sicher zug\u00e4nglich machst \u2013 per HTTPS, ganz ohne eigene Domain oder Cloudflare-Account.</p>"},{"location":"HowToCloudflare/#hintergrund","title":"\ud83d\udea7 Hintergrund","text":"<p>In unserem Projekt wurde das Frontend separat auf Netlify deployed. Da Netlify standardm\u00e4\u00dfig HTTPS verwendet, muss auch das Backend \u00fcber HTTPS erreichbar sein, damit die Kommunikation funktioniert. Hier biegt unsere Route Richtung Cloudflare Tunnel ab.</p> <p>Cloudflare stellt uns einen tempor\u00e4ren HTTPS-Tunnel zur Verf\u00fcgung: Das Frontend kommuniziert mit Cloudflare, und Cloudflare leitet die Anfragen sicher an das lokale Backend weiter \u2013 ohne Zertifikate oder Domain.</p>"},{"location":"HowToCloudflare/#voraussetzungen","title":"\u2705 Voraussetzungen","text":"<p>Was du brauchst</p> <ul> <li>\ud83d\udc27 Ein Linux-Server mit Internetzugang</li> <li>\ud83d\udd01 Ein lokal laufender Dienst auf <code>http://localhost:8080</code></li> <li>\ud83d\udce6 <code>nohup</code> installiert (standardm\u00e4\u00dfig bei den meisten Linux-Systemen)</li> </ul>"},{"location":"HowToCloudflare/#1-cloudflare-tunnel-installieren","title":"\ud83d\udee0\ufe0f 1. Cloudflare Tunnel installieren","text":"<pre><code>wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb\nsudo dpkg -i cloudflared-linux-amd64.deb\n</code></pre>"},{"location":"HowToCloudflare/#2-tunnel-im-hintergrund-starten","title":"\ud83d\ude80 2. Tunnel im Hintergrund starten","text":"<p>Starte den Tunnel im Hintergrund, damit er auch nach SSH-Trennung weiterl\u00e4uft:</p> <pre><code>nohup cloudflared tunnel --url http://localhost:8080 &gt; tunnel.log 2&gt;&amp;1 &amp;\n</code></pre> <p>Was passiert hier?</p> <ul> <li>nohup sorgt daf\u00fcr, dass der Tunnel im Hintergrund weiterl\u00e4uft \u2013 auch nach einer SSH-Trennung.</li> <li>Die Ausgabe (inkl. HTTPS-URL) wird in die Datei tunnel.log geschrieben.</li> </ul>"},{"location":"HowToCloudflare/#3-https-tunnel-url-auslesen","title":"\ud83d\udd0e 3. HTTPS-Tunnel-URL auslesen","text":"<p>Verwende diesen Befehl, um die generierte URL herauszufiltern:</p> <pre><code>grep -oP 'https://.*\\.trycloudflare\\.com' tunnel.log\n</code></pre> <p>Beispielausgabe:</p> <pre><code>https://raise-operational-will-gentle.trycloudflare.com\n</code></pre> <p>\ud83d\udc49 Diese URL kannst du z.\u202fB. im Frontend (Netlify) eintragen, um das Backend erreichbar zu machen.</p>"},{"location":"HowToCloudflare/#hinweis-zur-etappe","title":"\u26a0\ufe0f Hinweis zur Etappe","text":"<p>Nur tempor\u00e4r!</p> <p>Der hier genutzte \"Account-less\"-Tunnel ist nur f\u00fcr tempor\u00e4re Tests gedacht. Er ist nicht garantiert verf\u00fcgbar, nicht wiederverwendbar und nicht f\u00fcr Produktivsysteme geeignet.</p> <p>F\u00fcr einen stabilen, benannten Tunnel solltest du ein Cloudflare-Konto nutzen.</p>"},{"location":"HowToCloudflare/#weitere-infos","title":"\ud83d\udcda Weitere Infos","text":"<p>\ud83d\udc49 Cloudflare Tunnel Quickstart</p>"},{"location":"HowToSSH%28Server%29/","title":"\ud83d\udd10 Etappe 1a \u2013 SSH-Zugriff per Passwort (ohne Public Key)","text":"<p>Etappenziel</p> <p>Diese Etappe auf Hasan\u2019s Route f\u00fchrt dich zur Vorbereitung deines Ubuntu-Servers f\u00fcr den SSH-Zugriff \u2013 per Passwort, ganz ohne Public-Key-Konfiguration.</p>"},{"location":"HowToSSH%28Server%29/#hintergrund","title":"\ud83d\udea7 Hintergrund","text":"<p>Unsere Route startete urspr\u00fcnglich mit Railway, wo Backend und Datenbank gehostet wurden. Als das Test-Abo endete, bogen wir auf einen neuen Pfad ab: ein eigener Ubuntu-Server.  </p> <p>Da unsere CI/CD-Pipeline direkten Zugriff auf den Server ben\u00f6tigt, ist der SSH-Zugriff ein zentraler Wegpunkt auf dem Deployment-Weg.</p>"},{"location":"HowToSSH%28Server%29/#1-openssh-server-installieren","title":"\ud83d\udee0\ufe0f 1. OpenSSH-Server installieren","text":"<p>F\u00fchre auf dem Ubuntu-Server folgende Befehle aus:</p> <pre><code>sudo apt update\nsudo apt install openssh-server -y\n</code></pre> <p>Pr\u00fcfe anschlie\u00dfend, ob der Dienst l\u00e4uft:</p> <pre><code>sudo systemctl status ssh\n</code></pre> <p>Falls nicht aktiv, starte den Dienst und aktiviere den Autostart:</p> <pre><code>sudo systemctl enable --now ssh\n</code></pre>"},{"location":"HowToSSH%28Server%29/#2-passwort-login-aktivieren","title":"\u2699\ufe0f 2. Passwort-Login aktivieren","text":"<p>Bearbeite die Konfigurationsdatei:</p> <pre><code>sudo nano /etc/ssh/sshd_config\n</code></pre> <p>Suche und \u00e4ndere (oder erg\u00e4nze) folgende Zeilen:</p> <pre><code>PasswordAuthentication yes\nPermitRootLogin no\n</code></pre> <p>Sicherheit</p> <p><code>PermitRootLogin no</code> verhindert direkte Root-Logins \u2013 das erh\u00f6ht die Sicherheit.</p> <p>Speichere und schlie\u00dfe die Datei (<code>CTRL + O</code>, <code>Enter</code>, dann <code>CTRL + X</code>).</p>"},{"location":"HowToSSH%28Server%29/#3-ssh-dienst-neu-starten","title":"\ud83d\udd04 3. SSH-Dienst neu starten","text":"<pre><code>sudo systemctl restart ssh\n</code></pre>"},{"location":"HowToSSH%28Server%29/#4-passwort-fur-benutzer-setzen","title":"\ud83d\udd11 4. Passwort f\u00fcr Benutzer setzen","text":"<p>Falls der Benutzer noch kein Passwort hat:</p> <pre><code>sudo passwd dein-benutzername\n</code></pre> <p>Beispiel:</p> <pre><code>sudo passwd wiss\n</code></pre>"},{"location":"HowToSSH%28Server%29/#5-verbindung-testen","title":"\ud83e\uddea 5. Verbindung testen","text":"<p>Von einem Client aus (Linux, macOS oder Windows PowerShell/CMD):</p> <pre><code>ssh wiss@&lt;server-ip&gt;\n</code></pre> <p>Gib das gesetzte Passwort ein \u2013 und du bist verbunden \u2705</p>"},{"location":"HowToSSH%28Server%29/#hinweis-zur-sicherheit","title":"\u26a0\ufe0f Hinweis zur Sicherheit","text":"<p>Nicht f\u00fcr produktive Systeme empfohlen</p> <p>Die Anmeldung per Passwort ist einfach, aber deutlich unsicherer als die Public-Key-Authentifizierung. F\u00fcr produktive Server wird dringend empfohlen, auf Public-Key-Login umzustellen.</p> <p>Zur n\u00e4chsten Etappe</p> <p>\ud83d\udc49 SSH-Zugriff zum Ununtu-Server \u00bb</p>"},{"location":"HowToSSH/","title":"\ud83d\udd10 Etappe 1b \u2013 SSH-Zugriff zum Ubuntu-Server","text":"<p>Etappenziel</p> <p>Bevor du dich auf deiner Route per SSH mit dem Server verbindest, lernst du hier, wie du unter Linux oder Windows OpenSSH installierst und dich per Passwort sicher anmeldest \u2013 ganz ohne Public-Key-Konfiguration.</p>"},{"location":"HowToSSH/#fur-linux","title":"\ud83d\udc27 F\u00fcr Linux","text":"<p>1. OpenSSH Client installieren</p> <p>Installiere den SSH-Client mit folgendem Befehl:</p> <pre><code>sudo apt update\nsudo apt install openssh-client -y\n</code></pre> <p>Pr\u00fcfe danach, ob SSH korrekt installiert wurde:</p> <pre><code>ssh -V\n</code></pre> <p>2. Verbindung mit dem Server herstellen</p> <p>Beispiel:</p> <pre><code>ssh wiss@31.XXX.XXX.XXX\n</code></pre>"},{"location":"HowToSSH/#fur-windows","title":"\ud83e\ude9f F\u00fcr Windows","text":""},{"location":"HowToSSH/#option-1-powershell-cmd-openssh-vorinstalliert","title":"\ud83d\udd39 Option 1: PowerShell / CMD (OpenSSH vorinstalliert)","text":"<ol> <li>\u00d6ffne PowerShell oder CMD </li> <li> <p>Verbinde dich mit dem Server:</p> <pre><code>ssh wiss@31.XXX.XXX.XXX\n</code></pre> </li> </ol>"},{"location":"HowToSSH/#option-2-ssh-wird-nicht-erkannt","title":"\ud83d\udd39 Option 2: <code>ssh</code> wird nicht erkannt","text":"<p>OpenSSH Client aktivieren</p> <ol> <li>\u00d6ffne: Einstellungen \u2192 Apps \u2192 Optionale Features </li> <li>Suche nach OpenSSH Client </li> <li>Installiere ihn, falls nicht vorhanden  </li> <li> <p>Danach wie gewohnt verbinden:</p> <pre><code>ssh wiss@31.XXX.XXX.XXX\n</code></pre> </li> </ol>"},{"location":"HowToSSH/#option-3-mit-putty-grafisch","title":"\ud83d\udd39 Option 3: Mit PuTTY (grafisch)","text":"<ol> <li>Lade PuTTY herunter: https://www.putty.org/ </li> <li>\u00d6ffne PuTTY  </li> <li>Trage ein:</li> <li>Host Name: <code>31.XXX.XXX.XXX</code></li> <li>Port: <code>22</code></li> <li>Connection type: <code>SSH</code></li> <li>Klicke auf Open</li> <li>Melde dich an:</li> <li>Benutzername: <code>wiss</code></li> <li>Passwort: <code>XXXX</code></li> </ol>"},{"location":"HowToSSH/#erfolgreiche-verbindung","title":"\u2705 Erfolgreiche Verbindung","text":"<p>Wenn alles geklappt hat, siehst du etwas wie:</p> <pre><code>Welcome to Ubuntu ...\n</code></pre> <p>Du bist nun per SSH mit dem Server verbunden.</p>"}]}